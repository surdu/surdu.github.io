I"<p>When working with CSS you sometimes have to work around a behaviour known as <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Box_Model/Mastering_margin_collapsing">margin collapsing</a>. Basically, the top/bottom margin of two neighboring block elements will be set to the biggest margin value in-between the two elements, if their top/bottom margins are adjacent and no text, clearance, padding nor border separate them.</p>

<p>Let‚Äôs say we want to have a green box inside a red box and the green box to be 50 pixels down inside the red box.</p>

<p>If we just add <code class="highlighter-rouge">margin-top: 50px;</code> to the inside green box we‚Äôll soon realize that the result is not as intended:</p>

<p data-height="275" data-theme-id="dark" data-slug-hash="QppVGv" data-default-tab="css,result" data-user="surdu" data-embed-version="2" data-pen-title="No border collapse example" class="codepen"></p>

<p>Note that the top-margin of the green children element seems to be passed on to the red parent.</p>

<p>The most common method of preventing this is to use <code class="highlighter-rouge">overflow: hidden;</code> on the parent element. Other methods include adding <code class="highlighter-rouge">float</code>, <code class="highlighter-rouge">border</code>, <code class="highlighter-rouge">padding</code> or something else that will separate the two margins.</p>

<p>But if we don‚Äôt want to change the way the parent acts and looks, all of the above methods will not work for us.</p>

<h3 id="the-solution">The solution</h3>
<p>Sub-pixels values to the rescue !</p>

<p>What we can do is set top/bottom padding to a value that is greater than 0 pixels, so that margin collapsing is not applied, but also less than 1 pixels so the browser doesn‚Äôt render anything.</p>

<p>After running a <a href="http://codepen.io/surdu/pen/GWMNZK">quick test</a> on a variety of browser and screen density combinations I‚Äôve come to the conclusion that <code class="highlighter-rouge">0.05px</code> is our best bet in order to not render anything.</p>

<p>I would say <code class="highlighter-rouge">0.1px</code> it‚Äôs still a good choice if you set it on only one side, but Firefox seems to render the accumulated 0.2 pixels on retina displays if you set the padding on both top and bottom.</p>

<p>So let‚Äôs apply this to our example:</p>
<p data-height="309" data-theme-id="0" data-slug-hash="mWqYdQ" data-default-tab="css,result" data-user="surdu" data-embed-version="2" data-pen-title="Border collapse fix" class="codepen"></p>

<p>As you can see, after applying the 0.05 pixels padding to the parent element‚Äôs top and bottom, now the margin  of the children element is applied as we initially intended.</p>

<p>In order to make sure this doesn‚Äôt have any visual impact, I encourage you to run the <a href="http://codepen.io/surdu/pen/GWMNZK">above mentioned test</a> on your combination of browser and screen density. The solution will have no visual impact if the last green box with the <code class="highlighter-rouge">0.05px</code> text in it has no red borders on top and bottom.</p>

<p>If you find a context in which this solution fails, please let me know in the comments below.</p>

<script async="" src="https://production-assets.codepen.io/assets/embed/ei.js"></script>

<p>Hope this helps üëç</p>
:ET